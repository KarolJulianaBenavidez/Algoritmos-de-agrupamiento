# -*- coding: utf-8 -*-
"""Preprocesamiento de datos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kf-u8gdlhWq8pbleuwjveX2dWet70KOq

# PREPROCESAMIENTO DE DATOS
"""

# Importar librerías de análisis, visualización y normalizado
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Importar datos en el DataFrame
datos = pd.read_excel("D:/Users/USERVT/Desktop/datos/PREPROCESAMIENTO/VARIABLESNUMERICAS..xlsx")
df=pd.DataFrame(datos)

# Python lee todas las columnas del DF
pd.options.display.max_columns = None

#Python lee todas las filas del DF
pd.options.display.max_rows = None

"""## Conociendo los datos"""

#Ver todos los datos
df

"""En la observación de los datos se detalla que hay demasidas variables con observaciones ceros, que para este proyecto de grado son datos que sí brindan información por lo que eliminar esos valores sería alterar los datos. Por lo anterior se toma la decisión de categorizar las variables para realizar agrupaciones y que los datos se puedan trabajar de mejor manera."""

# Importar datos categorizados en el DataFrame
datos1 = pd.read_excel("D:/Users/USERVT/Desktop/datos/PREPROCESAMIENTO/VARIABLESCATEGORIZADAS.xlsx")
df1=pd.DataFrame(datos1)

#Observar datos categorizados
df1

#Descripción general de la base de datos
df1.describe()

"""Se observa por cada variable la media, la desviación estandar, mínimos, máximos y percentiles. Lo anterior ayuda a tener un pequeño acercamiento sobre posibles datos atípicos, la distribución de las variables y el valor en donde se acomulan los datos según la variable"""

# Mostrar la descripción de los datos en un nuevo documento Excel
df1.describe().to_excel("D:/Users/USERVT/Desktop/datos/descripciónVcategorizagas.xlsx")

# Cantidad de datos
df.shape

"""Los datos que se estudian hasta este momento de la investigación cuentan con 56 variables relacionadas a mano de obra y producción, con un total de 511 observaciones por variables en un periodo de 5 años"""

#Tipo de datos
df.dtypes

"""Las variables correspondientes a la ubicación (departamento) de la empresa encuestada, la actividad economica a la que se dedica la empresa y el año en el que se realizó la encuesta son de tipo object, las demás variables son tipo int (esto se debe que al realizar la categorización a los grupos se les asignó valores númericos). Las variables que son tipo objeto no se han subido en esta parte del procesamiento para que el codigo de estandirazación pueda ser leído.

## Limpieza de datos

### - Valores faltantes
"""

# Información de los datos
df.info()

"""Se puede apreciar que por cada variables exitente hay exactamente 511 observaciones, lo que indica que no hay valores faltantes.

### - Imputación de datos

No se realiza imputación de datos. Los datos encontrados con valores en cero brindan información y no se interpretan como perdida de información. Esta es una de las razones por las que se realiza la categorización en los datos y no se eliminan los ceros.

### - Detección y eliminación de valores atípicos

Se encuentran 17 empresas que no brindan información relevante por lo que se decide eliminar esas filas.

### - Escalado de los datos
"""

# Método de minimo y máximo de pandas para normalizar variables convirtiendo variables a rango (0,1)
def min_max_scaling(df1):
    df1_norm = df1.copy() #Creación de una copia de DF
    # Aplicar minimo y máximo
    for column in df1_norm.columns:
        df1_norm[column] = (df1_norm[column] - df1_norm[column].min()) / (df1_norm[column].max() - df1_norm[column].min())
    return df1_norm

# Traer la función de nimimo y máximo del escalado
df1_escalado = min_max_scaling(df1)
df1_escalado

# Mostrar las variables escaladas 
df1_escalado.to_excel("D:/Users/USERVT/Desktop/datos/CategEscalado.xlsx")

#Observar que los rangos de las variables se encuentran desde cero hasta uno
df1_escalado.describe()

"""La normalización busca transformar las caracteristicas buscando que todas las variables se encuentren en un mismo rango de cero a uno.

### - Agrupación de los datos

subir nuevamente los datos con las tres variables de departamento, ciiu4 y periodo
"""

# Importar datos en el DataFrame 3 variables más que no debían escalarse , ubicación, CIIU4 y periodo
datoscategorizados = pd.read_excel("D:/Users/USERVT/Desktop/datos/PREPROCESAMIENTO/VARIABLESCATEGORIZADASconaños.xlsx")
df2=pd.DataFrame(datoscategorizados)

df2

#Agrupar los años según el año de la encuesta
df2.groupby('periodo')

list(df2.groupby('periodo'))

"""Se observa que se realizan cinco agrupaciones diferentes según el año de encuesta"""

df2.groupby('periodo').size()

"""Los cinco grupos son los siguiente: grupo 1 "2015" con 86 establecimientos encuestados; grupo 2 "2016" con 110 establecimientos encuestados; grupo 3 "2017" con 110 establecimientos encuestados: grupo 4 "2018" con 104 establecimientos encuestados y grupo 5 "2019" con 101 establecimientos encuestados."""

df2.groupby(['periodo' , 'DPTO' , 'ciiu4']).agg('count')

"""Se realizó la anterior agrupación para observacar la cantidad de empresas encuestadas según la ubicació de la empresa y la actividad económica a la que pertenecían en el momento de la ejecución de la encuesta (periodo)"""